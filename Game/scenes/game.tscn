[gd_scene load_steps=18 format=3 uid="uid://eu68tnj8svd6"]

[ext_resource type="Script" path="res://scripts/game.gd" id="1_c8s26"]
[ext_resource type="PackedScene" uid="uid://b7x3p8a7xojkx" path="res://scenes/player.tscn" id="1_pwhws"]
[ext_resource type="Texture2D" uid="uid://cmutj84sj4sbj" path="res://assets/sprites/world_tileset.png" id="2_528ub"]
[ext_resource type="Script" path="res://scripts/game_manager.gd" id="2_md752"]
[ext_resource type="PackedScene" uid="uid://d3oskb3x1gjys" path="res://scenes/platform.tscn" id="3_v1tpm"]
[ext_resource type="PackedScene" uid="uid://58jgib3jmoei" path="res://scenes/coin.tscn" id="5_dqucf"]
[ext_resource type="PackedScene" uid="uid://bmf6i851tcgvo" path="res://scenes/killzone.tscn" id="6_svtmw"]
[ext_resource type="PackedScene" uid="uid://t5dert8c1cm6" path="res://scenes/slime.tscn" id="7_c747q"]
[ext_resource type="FontFile" uid="uid://dc1jnswhmj5xx" path="res://assets/fonts/PixelOperator8.ttf" id="8_vibu3"]
[ext_resource type="PackedScene" uid="uid://c6dao31vm8tl4" path="res://scenes/sign.tscn" id="9_ededd"]
[ext_resource type="PackedScene" uid="uid://ckddvyxgjev6m" path="res://scenes/bat.tscn" id="11_8vwmf"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_8i2b2"]
texture = ExtResource("2_528ub")
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:0/0 = 0
5:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:0/0/physics_layer_0/angular_velocity = 0.0
5:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:0/0 = 0
7:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:0/0/physics_layer_0/angular_velocity = 0.0
7:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:0/0 = 0
8:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:0/0/physics_layer_0/angular_velocity = 0.0
8:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:0/0 = 0
9:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:0/0/physics_layer_0/angular_velocity = 0.0
9:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, -1.125, -8, 1.625, -7, 8, -6.875, 8, 0.125, 1.875, -0.25, -1.75, -0.625, -8, -0.625)
10:0/0 = 0
10:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:0/0/physics_layer_0/angular_velocity = 0.0
10:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -6, -1.5625, -6.125, 0.0625, -4.25, 1.81519, -6.08085, 8, -6, 8, 0.875, 1.93898, 0.969703, -0.0625, -0.625, -1.68904, 1.02639, -8, 1.125)
11:0/0 = 0
11:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:0/0/physics_layer_0/angular_velocity = 0.0
11:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -6.875, 1.6875, -8, 8, -8, 8, -1.625, 4.1875, -0.875, 2.0625, -1.375, -1.4375, 0.125, -8, 0.25)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:1/0 = 0
5:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:1/0/physics_layer_0/angular_velocity = 0.0
5:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:1/0 = 0
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
8:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:1/0 = 0
9:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:1/0/physics_layer_0/angular_velocity = 0.0
9:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -6.875, 8, 0, 2.0625, 0, -1.8125, -0.875, -8, -0.75)
10:1/0 = 0
10:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:1/0/physics_layer_0/angular_velocity = 0.0
10:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -6, -1.5625, -6.125, 0.0625, -4.25, 1.81519, -6.08085, 8, -6, 8, 0.875, 1.93898, 0.969703, -0.0625, -0.625, -1.68904, 1.02639, -8, 1.125)
11:1/0 = 0
11:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:1/0/physics_layer_0/angular_velocity = 0.0
11:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -6.875, 1.6875, -8, 8, -8, 8, -1.625, 4.1875, -0.875, 2.0625, -1.375, -1.4375, 0.125, -8, 0.25)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:2/0 = 0
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:2/0 = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:2/0 = 0
9:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:2/0/physics_layer_0/angular_velocity = 0.0
9:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -6.875, 8, 0, 2.0625, 0, -1.8125, -0.875, -8, -0.75)
10:2/0 = 0
10:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:2/0/physics_layer_0/angular_velocity = 0.0
10:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -6, -1.5625, -6.125, 0.0625, -4.25, 1.81519, -6.08085, 8, -6, 8, 0.875, 1.93898, 0.969703, -0.0625, -0.625, -1.68904, 1.02639, -8, 1.125)
11:2/0 = 0
11:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:2/0/physics_layer_0/angular_velocity = 0.0
11:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -6.875, 1.6875, -8, 8, -8, 8, -1.625, 4.1875, -0.875, 2.0625, -1.375, -1.4375, 0.125, -8, 0.25)
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:3/0 = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:3/0 = 0
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
9:3/0 = 0
9:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:3/0/physics_layer_0/angular_velocity = 0.0
0:4/0 = 0
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0 = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0 = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
6:4/0 = 0
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0 = 0
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
0:5/0 = 0
0:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:5/0/physics_layer_0/angular_velocity = 0.0
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0 = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
7:5/0 = 0
7:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
1:6/0 = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0 = 0
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0 = 0
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0 = 0
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0
0:7/0 = 0
0:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:7/0/physics_layer_0/angular_velocity = 0.0
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0 = 0
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
6:7/0 = 0
6:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:7/0/physics_layer_0/angular_velocity = 0.0
7:7/0 = 0
7:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:7/0/physics_layer_0/angular_velocity = 0.0
8:7/0 = 0
8:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:7/0/physics_layer_0/angular_velocity = 0.0
0:8/0 = 0
0:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0 = 0
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0 = 0
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
7:8/0 = 0
7:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:8/0/physics_layer_0/angular_velocity = 0.0
8:8/0 = 0
8:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:8/0/physics_layer_0/angular_velocity = 0.0
0:9/0 = 0
0:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
5:9/0 = 0
5:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:9/0/physics_layer_0/angular_velocity = 0.0
6:9/0 = 0
6:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:9/0/physics_layer_0/angular_velocity = 0.0
7:9/0 = 0
7:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:9/0/physics_layer_0/angular_velocity = 0.0
0:10/0 = 0
0:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:10/0/physics_layer_0/angular_velocity = 0.0
1:10/0 = 0
1:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:10/0/physics_layer_0/angular_velocity = 0.0
2:10/0 = 0
2:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:10/0/physics_layer_0/angular_velocity = 0.0
3:10/0 = 0
3:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:10/0/physics_layer_0/angular_velocity = 0.0
4:10/0 = 0
4:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:10/0/physics_layer_0/angular_velocity = 0.0
6:10/0 = 0
6:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:10/0/physics_layer_0/angular_velocity = 0.0
0:11/0 = 0
0:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:11/0/physics_layer_0/angular_velocity = 0.0
1:11/0 = 0
1:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:11/0/physics_layer_0/angular_velocity = 0.0
2:11/0 = 0
2:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:11/0/physics_layer_0/angular_velocity = 0.0
3:11/0 = 0
3:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:11/0/physics_layer_0/angular_velocity = 0.0
4:11/0 = 0
4:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:11/0/physics_layer_0/angular_velocity = 0.0
5:11/0 = 0
5:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:11/0/physics_layer_0/angular_velocity = 0.0
0:12/0 = 0
0:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:12/0/physics_layer_0/angular_velocity = 0.0
1:12/0 = 0
1:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:12/0/physics_layer_0/angular_velocity = 0.0
2:12/0 = 0
2:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:12/0/physics_layer_0/angular_velocity = 0.0
3:12/0 = 0
3:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:12/0/physics_layer_0/angular_velocity = 0.0
4:12/0 = 0
4:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:12/0/physics_layer_0/angular_velocity = 0.0
0:13/0 = 0
0:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:13/0/physics_layer_0/angular_velocity = 0.0
1:13/0 = 0
1:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:13/0/physics_layer_0/angular_velocity = 0.0
2:13/0 = 0
2:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:13/0/physics_layer_0/angular_velocity = 0.0
3:13/0 = 0
3:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:13/0/physics_layer_0/angular_velocity = 0.0
4:13/0 = 0
4:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:13/0/physics_layer_0/angular_velocity = 0.0
5:13/0 = 0
5:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:13/0/physics_layer_0/angular_velocity = 0.0
0:14/0 = 0
0:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:14/0/physics_layer_0/angular_velocity = 0.0
1:14/0 = 0
1:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:14/0/physics_layer_0/angular_velocity = 0.0
2:14/0 = 0
2:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:14/0/physics_layer_0/angular_velocity = 0.0
3:14/0 = 0
3:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:14/0/physics_layer_0/angular_velocity = 0.0
4:14/0 = 0
4:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:14/0/physics_layer_0/angular_velocity = 0.0
0:15/0 = 0
0:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:15/0/physics_layer_0/angular_velocity = 0.0
1:15/0 = 0
1:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:15/0/physics_layer_0/angular_velocity = 0.0
2:15/0 = 0
2:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:15/0/physics_layer_0/angular_velocity = 0.0
3:15/0 = 0
3:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:15/0/physics_layer_0/angular_velocity = 0.0
2:4/size_in_atlas = Vector2i(3, 3)
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_dk3tc"]
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_8i2b2")

[sub_resource type="WorldBoundaryShape2D" id="WorldBoundaryShape2D_026aa"]

[sub_resource type="Animation" id="Animation_6ee5b"]
length = 2.0
loop_mode = 2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(390, 69), Vector2(310, 69)]
}

[sub_resource type="Animation" id="Animation_1dgnq"]
resource_name = "move"
length = 2.0
loop_mode = 2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(320, 53), Vector2(401, 53)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_dm8ei"]
_data = {
"RESET": SubResource("Animation_6ee5b"),
"move": SubResource("Animation_1dgnq")
}

[node name="Game" type="Node2D"]
script = ExtResource("1_c8s26")

[node name="GameManager" type="Node" parent="."]
unique_name_in_owner = true
script = ExtResource("2_md752")

[node name="ScoreLabel" type="Label" parent="GameManager"]
anchors_preset = -1
anchor_left = 0.255
anchor_top = -0.058
anchor_right = 0.255
anchor_bottom = -0.058
offset_left = -79.76
offset_top = -36.416
offset_right = 123.24
offset_bottom = -13.416
theme_override_fonts/font = ExtResource("8_vibu3")
theme_override_font_sizes/font_size = 8
text = "You currently have x coins."

[node name="TileMap" type="TileMap" parent="."]
position = Vector2(-10, 16)
tile_set = SubResource("TileSet_dk3tc")
format = 2
layer_0/name = "Background"
layer_0/tile_data = PackedInt32Array(393214, 65536, 11, 458750, 65536, 11, 524286, 65536, 11, 589822, 65536, 12, 655358, 65536, 13, 720894, 65536, 13, 393215, 65536, 11, 458751, 65536, 11, 524287, 65536, 11, 589823, 65536, 12, 655359, 65536, 13, 720895, 65536, 13, 327680, 65536, 11, 393216, 65536, 11, 458752, 65536, 11, 524288, 65536, 12, 589824, 65536, 13, 655360, 65536, 13, 327681, 65536, 11, 393217, 65536, 11, 458753, 65536, 11, 524289, 65536, 12, 589825, 65536, 13, 655361, 65536, 13, 327682, 65536, 11, 393218, 65536, 11, 458754, 65536, 11, 524290, 65536, 12, 589826, 65536, 13, 655362, 65536, 13, 327683, 65536, 11, 393219, 65536, 11, 458755, 65536, 11, 524291, 65536, 12, 589827, 65536, 13, 655363, 65536, 13, 327684, 65536, 11, 393220, 65536, 11, 458756, 65536, 11, 524292, 65536, 12, 589828, 65536, 13, 655364, 65536, 13, 327685, 65536, 11, 393221, 65536, 11, 458757, 65536, 11, 524293, 65536, 12, 589829, 65536, 13, 655365, 65536, 13, 327686, 65536, 11, 393222, 65536, 11, 458758, 65536, 11, 524294, 65536, 12, 589830, 65536, 13, 655366, 65536, 13, 327687, 65536, 11, 393223, 65536, 11, 458759, 65536, 11, 524295, 65536, 12, 589831, 65536, 13, 655367, 65536, 13, 327688, 65536, 11, 393224, 65536, 11, 458760, 65536, 11, 524296, 65536, 12, 589832, 65536, 13, 655368, 65536, 13, 327689, 65536, 11, 393225, 65536, 11, 458761, 65536, 11, 524297, 65536, 12, 589833, 65536, 13, 655369, 65536, 13, 327690, 65536, 11, 393226, 65536, 11, 458762, 65536, 11, 524298, 65536, 12, 589834, 65536, 13, 655370, 65536, 13, 327691, 65536, 11, 393227, 65536, 11, 458763, 65536, 11, 524299, 65536, 12, 589835, 65536, 13, 655371, 65536, 13, 327692, 65536, 11, 393228, 65536, 11, 458764, 65536, 11, 524300, 65536, 12, 589836, 65536, 13, 655372, 65536, 13, 327693, 65536, 11, 393229, 65536, 11, 458765, 65536, 11, 524301, 65536, 12, 589837, 65536, 13, 655373, 65536, 13, 327694, 65536, 11, 393230, 65536, 11, 458766, 65536, 11, 524302, 65536, 12, 589838, 65536, 13, 655374, 65536, 13, 327695, 65536, 11, 393231, 65536, 11, 458767, 65536, 11, 524303, 65536, 12, 589839, 65536, 13, 655375, 65536, 13, 327696, 65536, 11, 393232, 65536, 11, 458768, 65536, 11, 524304, 65536, 12, 589840, 65536, 13, 655376, 65536, 13, 327697, 65536, 11, 393233, 65536, 11, 458769, 65536, 11, 524305, 65536, 12, 589841, 65536, 13, 655377, 65536, 13, 327698, 65536, 11, 393234, 65536, 11, 458770, 65536, 11, 524306, 65536, 12, 589842, 65536, 13, 655378, 65536, 13, 327699, 65536, 11, 393235, 65536, 11, 458771, 65536, 11, 524307, 65536, 12, 589843, 65536, 13, 655379, 65536, 13, 327700, 65536, 11, 393236, 65536, 11, 458772, 65536, 11, 524308, 65536, 12, 589844, 65536, 13, 655380, 65536, 13, 327701, 65536, 11, 393237, 65536, 11, 458773, 65536, 11, 524309, 65536, 12, 589845, 65536, 13, 655381, 65536, 13, 327702, 65536, 11, 393238, 65536, 11, 458774, 65536, 11, 524310, 65536, 12, 589846, 65536, 13, 655382, 65536, 13, 327703, 65536, 11, 393239, 65536, 11, 458775, 65536, 11, 524311, 65536, 12, 589847, 65536, 13, 655383, 65536, 13, 327704, 65536, 11, 393240, 65536, 11, 458776, 65536, 11, 524312, 65536, 12, 589848, 65536, 13, 655384, 65536, 13, 327705, 65536, 11, 393241, 65536, 11, 458777, 65536, 11, 524313, 65536, 12, 589849, 65536, 13, 655385, 65536, 13, 327706, 65536, 11, 393242, 65536, 11, 458778, 65536, 11, 524314, 65536, 12, 589850, 65536, 13, 655386, 65536, 13, 327707, 65536, 11, 393243, 65536, 11, 458779, 65536, 11, 524315, 65536, 12, 589851, 65536, 13, 655387, 65536, 13, 327708, 65536, 11, 393244, 65536, 11, 458780, 65536, 11, 524316, 65536, 12, 589852, 65536, 13, 655388, 65536, 13, 327709, 65536, 11, 393245, 65536, 11, 458781, 65536, 11, 524317, 65536, 12, 589853, 65536, 13, 655389, 65536, 13, 327710, 65536, 11, 393246, 65536, 11, 458782, 65536, 11, 524318, 65536, 12, 589854, 65536, 13, 655390, 65536, 13, 393210, 65536, 11, 458746, 65536, 11, 524282, 65536, 11, 589818, 65536, 12, 655354, 65536, 13, 720890, 65536, 13, 393211, 65536, 11, 458747, 65536, 11, 524283, 65536, 11, 589819, 65536, 12, 655355, 65536, 13, 720891, 65536, 13, 393212, 65536, 11, 458748, 65536, 11, 524284, 65536, 11, 589820, 65536, 12, 655356, 65536, 13, 720892, 65536, 13, 393213, 65536, 11, 458749, 65536, 11, 524285, 65536, 11, 589821, 65536, 12, 655357, 65536, 13, 720893, 65536, 13, 458741, 65536, 11, 458742, 65536, 11, 458743, 65536, 11, 524279, 65536, 11, 524280, 65536, 11, 524281, 65536, 11, 720904, 65536, 13, 720905, 65536, 13, 720906, 65536, 13, 720907, 65536, 13, 720908, 65536, 13, 720909, 65536, 13, 720910, 65536, 13, 720911, 65536, 13, 524277, 65536, 11, 589813, 65536, 12, 655349, 65536, 13, 720885, 65536, 13, 786421, 65536, 13, 524278, 65536, 11, 589814, 65536, 12, 655350, 65536, 13, 720886, 65536, 13, 786422, 65536, 13, 589815, 65536, 12, 655351, 65536, 13, 720887, 65536, 13, 786423, 65536, 13, 458744, 65536, 11, 589816, 65536, 12, 655352, 65536, 13, 720888, 65536, 13, 786424, 65536, 13, 458745, 65536, 11, 589817, 65536, 12, 655353, 65536, 13, 720889, 65536, 13, 786425, 65536, 13, 786426, 65536, 13, 786427, 65536, 13, 786428, 65536, 13, 786429, 65536, 13, 786430, 65536, 13, 786431, 65536, 13, 720896, 65536, 13, 720897, 65536, 13, 720898, 65536, 13, 720899, 65536, 13, 720900, 65536, 13, 720901, 65536, 13, 720902, 65536, 13, 720903, 65536, 13, 720912, 65536, 13, 720913, 65536, 13, 720914, 65536, 13, 720915, 65536, 13, 720916, 65536, 13, 720917, 65536, 13, 720918, 65536, 13, 720919, 65536, 13, 720920, 65536, 13, 720921, 65536, 13, 720922, 65536, 13, 720923, 65536, 13, 720924, 65536, 13, 720925, 65536, 13, 720926, 65536, 13, 393205, 65536, 11, 393206, 65536, 11, 393207, 65536, 11, 393208, 65536, 11, 393209, 65536, 11, 327669, 65536, 11, 327670, 65536, 11, 327671, 65536, 11, 327672, 65536, 11, 327673, 65536, 11, 327674, 65536, 11, 327675, 65536, 11, 327676, 65536, 11, 327677, 65536, 11, 327678, 65536, 11, 327679, 65536, 11, 262144, 65536, 11, 262145, 65536, 11, 262146, 65536, 11, 262147, 65536, 11, 262148, 65536, 11, 262149, 65536, 11, 262150, 65536, 11, 262151, 65536, 11, 262152, 65536, 11, 262153, 65536, 11, 262154, 65536, 11, 262155, 65536, 11, 262156, 65536, 11, 262157, 65536, 11, 262158, 65536, 11, 262159, 65536, 11, 262160, 65536, 11, 262161, 65536, 11, 262162, 65536, 11, 262163, 65536, 11, 262164, 65536, 11, 262165, 65536, 11, 262166, 65536, 11, 262167, 65536, 11, 262168, 65536, 11, 262169, 65536, 11, 262170, 65536, 11, 262171, 65536, 11, 262172, 65536, 11, 262173, 65536, 11, 262174, 65536, 11, -393227, 65536, 9, -327691, 65536, 9, -262155, 65536, 9, -196619, 65536, 9, -131083, 65536, 10, -393226, 65536, 9, -327690, 65536, 9, -262154, 65536, 9, -196618, 65536, 9, -131082, 65536, 10, -393225, 65536, 9, -327689, 65536, 9, -262153, 65536, 9, -196617, 65536, 9, -131081, 65536, 10, -393224, 65536, 9, -327688, 65536, 9, -262152, 65536, 9, -196616, 65536, 9, -131080, 65536, 10, -393223, 65536, 9, -327687, 65536, 9, -262151, 65536, 9, -196615, 65536, 9, -131079, 65536, 10, -393222, 65536, 9, -327686, 65536, 9, -262150, 65536, 9, -196614, 65536, 9, -131078, 65536, 10, -393221, 65536, 9, -327685, 65536, 9, -262149, 65536, 9, -196613, 65536, 9, -131077, 65536, 10, -393220, 65536, 9, -327684, 65536, 9, -262148, 65536, 9, -196612, 65536, 9, -131076, 65536, 10, -393219, 65536, 9, -327683, 65536, 9, -262147, 65536, 9, -196611, 65536, 9, -131075, 65536, 10, -393218, 65536, 9, -327682, 65536, 9, -262146, 65536, 9, -196610, 65536, 9, -131074, 65536, 10, -393217, 65536, 9, -327681, 65536, 9, -262145, 65536, 9, -196609, 65536, 9, -131073, 65536, 10, -458752, 65536, 9, -393216, 65536, 9, -327680, 65536, 9, -262144, 65536, 9, -196608, 65536, 10, -458751, 65536, 9, -393215, 65536, 9, -327679, 65536, 9, -262143, 65536, 9, -196607, 65536, 10, -458750, 65536, 9, -393214, 65536, 9, -327678, 65536, 9, -262142, 65536, 9, -196606, 65536, 10, -458749, 65536, 9, -393213, 65536, 9, -327677, 65536, 9, -262141, 65536, 9, -196605, 65536, 10, -458748, 65536, 9, -393212, 65536, 9, -327676, 65536, 9, -262140, 65536, 9, -196604, 65536, 10, -458747, 65536, 9, -393211, 65536, 9, -327675, 65536, 9, -262139, 65536, 9, -196603, 65536, 10, -458746, 65536, 9, -393210, 65536, 9, -327674, 65536, 9, -262138, 65536, 9, -196602, 65536, 10, -458745, 65536, 9, -393209, 65536, 9, -327673, 65536, 9, -262137, 65536, 9, -196601, 65536, 10, -458744, 65536, 9, -393208, 65536, 9, -327672, 65536, 9, -262136, 65536, 9, -196600, 65536, 10, -458743, 65536, 9, -393207, 65536, 9, -327671, 65536, 9, -262135, 65536, 9, -196599, 65536, 10, -458742, 65536, 9, -393206, 65536, 9, -327670, 65536, 9, -262134, 65536, 9, -196598, 65536, 10, -458741, 65536, 9, -393205, 65536, 9, -327669, 65536, 9, -262133, 65536, 9, -196597, 65536, 10, -458740, 65536, 9, -393204, 65536, 9, -327668, 65536, 9, -262132, 65536, 9, -196596, 65536, 10, -458739, 65536, 9, -393203, 65536, 9, -327667, 65536, 9, -262131, 65536, 9, -196595, 65536, 10, -458738, 65536, 9, -393202, 65536, 9, -327666, 65536, 9, -262130, 65536, 9, -196594, 65536, 10, -458737, 65536, 9, -393201, 65536, 9, -327665, 65536, 9, -262129, 65536, 9, -196593, 65536, 10, -458736, 65536, 9, -393200, 65536, 9, -327664, 65536, 9, -262128, 65536, 9, -196592, 65536, 10, -458735, 65536, 9, -393199, 65536, 9, -327663, 65536, 9, -262127, 65536, 9, -196591, 65536, 10, -458734, 65536, 9, -393198, 65536, 9, -327662, 65536, 9, -262126, 65536, 9, -196590, 65536, 10, -458733, 65536, 9, -393197, 65536, 9, -327661, 65536, 9, -262125, 65536, 9, -196589, 65536, 10, -458732, 65536, 9, -393196, 65536, 9, -327660, 65536, 9, -262124, 65536, 9, -196588, 65536, 10, -458731, 65536, 9, -393195, 65536, 9, -327659, 65536, 9, -262123, 65536, 9, -196587, 65536, 10, -458730, 65536, 9, -393194, 65536, 9, -327658, 65536, 9, -262122, 65536, 9, -196586, 65536, 10, -458729, 65536, 9, -393193, 65536, 9, -327657, 65536, 9, -262121, 65536, 9, -196585, 65536, 10, -458728, 65536, 9, -393192, 65536, 9, -327656, 65536, 9, -262120, 65536, 9, -196584, 65536, 10, -458727, 65536, 9, -393191, 65536, 9, -327655, 65536, 9, -262119, 65536, 9, -196583, 65536, 10, -458726, 65536, 9, -393190, 65536, 9, -327654, 65536, 9, -262118, 65536, 9, -196582, 65536, 10, -458725, 65536, 9, -393189, 65536, 9, -327653, 65536, 9, -262117, 65536, 9, -196581, 65536, 10, -458724, 65536, 9, -393188, 65536, 9, -327652, 65536, 9, -262116, 65536, 9, -196580, 65536, 10, -458723, 65536, 9, -393187, 65536, 9, -327651, 65536, 9, -262115, 65536, 9, -196579, 65536, 10, -458722, 65536, 9, -393186, 65536, 9, -327650, 65536, 9, -262114, 65536, 9, -196578, 65536, 10, -524299, 65536, 9, -458763, 65536, 9, -524298, 65536, 9, -458762, 65536, 9, -524297, 65536, 9, -458761, 65536, 9, -524296, 65536, 9, -458760, 65536, 9, -524295, 65536, 9, -458759, 65536, 9, -524294, 65536, 9, -458758, 65536, 9, -524293, 65536, 9, -458757, 65536, 9, -524292, 65536, 9, -458756, 65536, 9, -524291, 65536, 9, -458755, 65536, 9, -524290, 65536, 9, -458754, 65536, 9, -524289, 65536, 9, -458753, 65536, 9, -589824, 65536, 9, -524288, 65536, 9, -589823, 65536, 9, -524287, 65536, 9, -589822, 65536, 9, -524286, 65536, 9, -589821, 65536, 9, -524285, 65536, 9, -589820, 65536, 9, -524284, 65536, 9, -589819, 65536, 9, -524283, 65536, 9, -589818, 65536, 9, -524282, 65536, 9, -589817, 65536, 9, -524281, 65536, 9, -589816, 65536, 9, -524280, 65536, 9, -589815, 65536, 9, -524279, 65536, 9, -589814, 65536, 9, -524278, 65536, 9, -589813, 65536, 9, -524277, 65536, 9, -589812, 65536, 9, -524276, 65536, 9, -589811, 65536, 9, -524275, 65536, 9, -589810, 65536, 9, -524274, 65536, 9, -589809, 65536, 9, -524273, 65536, 9, -589808, 65536, 9, -524272, 65536, 9, -589807, 65536, 9, -524271, 65536, 9, -589806, 65536, 9, -524270, 65536, 9, -589805, 65536, 9, -524269, 65536, 9, -589804, 65536, 9, -524268, 65536, 9, -589803, 65536, 9, -524267, 65536, 9, -589802, 65536, 9, -524266, 65536, 9, -589801, 65536, 9, -524265, 65536, 9, -589800, 65536, 9, -524264, 65536, 9, -589799, 65536, 9, -524263, 65536, 9, -589798, 65536, 9, -524262, 65536, 9, -589797, 65536, 9, -524261, 65536, 9, -589796, 65536, 9, -524260, 65536, 9, -589795, 65536, 9, -524259, 65536, 9, -589794, 65536, 9, -524258, 65536, 9, -65547, 65536, 11, -11, 65536, 11, 65525, 65536, 11, 131061, 65536, 11, 196597, 65536, 11, 262133, 65536, 11, -65546, 65536, 11, -10, 65536, 11, 65526, 65536, 11, 131062, 65536, 11, 196598, 65536, 11, 262134, 65536, 11, -65545, 65536, 11, -9, 65536, 11, 65527, 65536, 11, 131063, 65536, 11, 196599, 65536, 11, 262135, 65536, 11, -65544, 65536, 11, -8, 65536, 11, 65528, 65536, 11, 131064, 65536, 11, 196600, 65536, 11, 262136, 65536, 11, -65543, 65536, 11, -7, 65536, 11, 65529, 65536, 11, 131065, 65536, 11, 196601, 65536, 11, 262137, 65536, 11, -65542, 65536, 11, -6, 65536, 11, 65530, 65536, 11, 131066, 65536, 11, 196602, 65536, 11, 262138, 65536, 11, -65541, 65536, 11, -5, 65536, 11, 65531, 65536, 11, 131067, 65536, 11, 196603, 65536, 11, 262139, 65536, 11, -65540, 65536, 11, -4, 65536, 11, 65532, 65536, 11, 131068, 65536, 11, 196604, 65536, 11, 262140, 65536, 11, -65539, 65536, 11, -3, 65536, 11, 65533, 65536, 11, 131069, 65536, 11, 196605, 65536, 11, 262141, 65536, 11, -65538, 65536, 11, -2, 65536, 11, 65534, 65536, 11, 131070, 65536, 11, 196606, 65536, 11, 262142, 65536, 11, -65537, 65536, 11, -1, 65536, 11, 65535, 65536, 11, 131071, 65536, 11, 196607, 65536, 11, 262143, 65536, 11, -131072, 65536, 11, -65536, 65536, 11, 0, 65536, 11, 65536, 65536, 11, 131072, 65536, 11, 196608, 65536, 11, -131071, 65536, 11, -65535, 65536, 11, 1, 65536, 11, 65537, 65536, 11, 131073, 65536, 11, 196609, 65536, 11, -131070, 65536, 11, -65534, 65536, 11, 2, 65536, 11, 65538, 65536, 11, 131074, 65536, 11, 196610, 65536, 11, -131069, 65536, 11, -65533, 65536, 11, 3, 65536, 11, 65539, 65536, 11, 131075, 65536, 11, 196611, 65536, 11, -131068, 65536, 11, -65532, 65536, 11, 4, 65536, 11, 65540, 65536, 11, 131076, 65536, 11, 196612, 65536, 11, -131067, 65536, 11, -65531, 65536, 11, 5, 65536, 11, 65541, 65536, 11, 131077, 65536, 11, 196613, 65536, 11, -131066, 65536, 11, -65530, 65536, 11, 6, 65536, 11, 65542, 65536, 11, 131078, 65536, 11, 196614, 65536, 11, -131065, 65536, 11, -65529, 65536, 11, 7, 65536, 11, 65543, 65536, 11, 131079, 65536, 11, 196615, 65536, 11, -131064, 65536, 11, -65528, 65536, 11, 8, 65536, 11, 65544, 65536, 11, 131080, 65536, 11, 196616, 65536, 11, -131063, 65536, 11, -65527, 65536, 11, 9, 65536, 11, 65545, 65536, 11, 131081, 65536, 11, 196617, 65536, 11, -131062, 65536, 11, -65526, 65536, 11, 10, 65536, 11, 65546, 65536, 11, 131082, 65536, 11, 196618, 65536, 11, -131061, 65536, 11, -65525, 65536, 11, 11, 65536, 11, 65547, 65536, 11, 131083, 65536, 11, 196619, 65536, 11, -131060, 65536, 11, -65524, 65536, 11, 12, 65536, 11, 65548, 65536, 11, 131084, 65536, 11, 196620, 65536, 11, -131059, 65536, 11, -65523, 65536, 11, 13, 65536, 11, 65549, 65536, 11, 131085, 65536, 11, 196621, 65536, 11, -131058, 65536, 11, -65522, 65536, 11, 14, 65536, 11, 65550, 65536, 11, 131086, 65536, 11, 196622, 65536, 11, -131057, 65536, 11, -65521, 65536, 11, 15, 65536, 11, 65551, 65536, 11, 131087, 65536, 11, 196623, 65536, 11, -131056, 65536, 11, -65520, 65536, 11, 16, 65536, 11, 65552, 65536, 11, 131088, 65536, 11, 196624, 65536, 11, -131055, 65536, 11, -65519, 65536, 11, 17, 65536, 11, 65553, 65536, 11, 131089, 65536, 11, 196625, 65536, 11, -131054, 65536, 11, -65518, 65536, 11, 18, 65536, 11, 65554, 65536, 11, 131090, 65536, 11, 196626, 65536, 11, -131053, 65536, 11, -65517, 65536, 11, 19, 65536, 11, 65555, 65536, 11, 131091, 65536, 11, 196627, 65536, 11, -131052, 65536, 11, -65516, 65536, 11, 20, 65536, 11, 65556, 65536, 11, 131092, 65536, 11, 196628, 65536, 11, -131051, 65536, 11, -65515, 65536, 11, 21, 65536, 11, 65557, 65536, 11, 131093, 65536, 11, 196629, 65536, 11, -131050, 65536, 11, -65514, 65536, 11, 22, 65536, 11, 65558, 65536, 11, 131094, 65536, 11, 196630, 65536, 11, -131049, 65536, 11, -65513, 65536, 11, 23, 65536, 11, 65559, 65536, 11, 131095, 65536, 11, 196631, 65536, 11, -131048, 65536, 11, -65512, 65536, 11, 24, 65536, 11, 65560, 65536, 11, 131096, 65536, 11, 196632, 65536, 11, -131047, 65536, 11, -65511, 65536, 11, 25, 65536, 11, 65561, 65536, 11, 131097, 65536, 11, 196633, 65536, 11, -131046, 65536, 11, -65510, 65536, 11, 26, 65536, 11, 65562, 65536, 11, 131098, 65536, 11, 196634, 65536, 11, -131045, 65536, 11, -65509, 65536, 11, 27, 65536, 11, 65563, 65536, 11, 131099, 65536, 11, 196635, 65536, 11, -131044, 65536, 11, -65508, 65536, 11, 28, 65536, 11, 65564, 65536, 11, 131100, 65536, 11, 196636, 65536, 11, -131043, 65536, 11, -65507, 65536, 11, 29, 65536, 11, 65565, 65536, 11, 131101, 65536, 11, 196637, 65536, 11, -131042, 65536, 11, -65506, 65536, 11, 30, 65536, 11, 65566, 65536, 11, 131102, 65536, 11, 196638, 65536, 11, -786443, 65536, 9, -720907, 65536, 9, -655371, 65536, 9, -589835, 65536, 9, -786442, 65536, 9, -720906, 65536, 9, -655370, 65536, 9, -589834, 65536, 9, -786441, 65536, 9, -720905, 65536, 9, -655369, 65536, 9, -589833, 65536, 9, -786440, 65536, 9, -720904, 65536, 9, -655368, 65536, 9, -589832, 65536, 9, -786439, 65536, 9, -720903, 65536, 9, -655367, 65536, 9, -589831, 65536, 9, -786438, 65536, 9, -720902, 65536, 9, -655366, 65536, 9, -589830, 65536, 9, -786437, 65536, 9, -720901, 65536, 9, -655365, 65536, 9, -589829, 65536, 9, -786436, 65536, 9, -720900, 65536, 9, -655364, 65536, 9, -589828, 65536, 9, -786435, 65536, 9, -720899, 65536, 9, -655363, 65536, 9, -589827, 65536, 9, -786434, 65536, 9, -720898, 65536, 9, -655362, 65536, 9, -589826, 65536, 9, -786433, 65536, 9, -720897, 65536, 9, -655361, 65536, 9, -589825, 65536, 9, -851968, 65536, 9, -786432, 65536, 9, -720896, 65536, 9, -655360, 65536, 9, -851967, 65536, 9, -786431, 65536, 9, -720895, 65536, 9, -655359, 65536, 9, -851966, 65536, 9, -786430, 65536, 9, -720894, 65536, 9, -655358, 65536, 9, -851965, 65536, 9, -786429, 65536, 9, -720893, 65536, 9, -655357, 65536, 9, -851964, 65536, 9, -786428, 65536, 9, -720892, 65536, 9, -655356, 65536, 9, -851963, 65536, 9, -786427, 65536, 9, -720891, 65536, 9, -655355, 65536, 9, -851962, 65536, 9, -786426, 65536, 9, -720890, 65536, 9, -655354, 65536, 9, -851961, 65536, 9, -786425, 65536, 9, -720889, 65536, 9, -655353, 65536, 9, -851960, 65536, 9, -786424, 65536, 9, -720888, 65536, 9, -655352, 65536, 9, -851959, 65536, 9, -786423, 65536, 9, -720887, 65536, 9, -655351, 65536, 9, -851958, 65536, 9, -786422, 65536, 9, -720886, 65536, 9, -655350, 65536, 9, -851957, 65536, 9, -786421, 65536, 9, -720885, 65536, 9, -655349, 65536, 9, -851956, 65536, 9, -786420, 65536, 9, -720884, 65536, 9, -655348, 65536, 9, -851955, 65536, 9, -786419, 65536, 9, -720883, 65536, 9, -655347, 65536, 9, -851954, 65536, 9, -786418, 65536, 9, -720882, 65536, 9, -655346, 65536, 9, -851953, 65536, 9, -786417, 65536, 9, -720881, 65536, 9, -655345, 65536, 9, -851952, 65536, 9, -786416, 65536, 9, -720880, 65536, 9, -655344, 65536, 9, -851951, 65536, 9, -786415, 65536, 9, -720879, 65536, 9, -655343, 65536, 9, -851950, 65536, 9, -786414, 65536, 9, -720878, 65536, 9, -655342, 65536, 9, -851949, 65536, 9, -786413, 65536, 9, -720877, 65536, 9, -655341, 65536, 9, -851948, 65536, 9, -786412, 65536, 9, -720876, 65536, 9, -655340, 65536, 9, -851947, 65536, 9, -786411, 65536, 9, -720875, 65536, 9, -655339, 65536, 9, -851946, 65536, 9, -786410, 65536, 9, -720874, 65536, 9, -655338, 65536, 9, -851945, 65536, 9, -786409, 65536, 9, -720873, 65536, 9, -655337, 65536, 9, -851944, 65536, 9, -786408, 65536, 9, -720872, 65536, 9, -655336, 65536, 9, -851943, 65536, 9, -786407, 65536, 9, -720871, 65536, 9, -655335, 65536, 9, -851942, 65536, 9, -786406, 65536, 9, -720870, 65536, 9, -655334, 65536, 9, -851941, 65536, 9, -786405, 65536, 9, -720869, 65536, 9, -655333, 65536, 9, -851940, 65536, 9, -786404, 65536, 9, -720868, 65536, 9, -655332, 65536, 9, -851939, 65536, 9, -786403, 65536, 9, -720867, 65536, 9, -655331, 65536, 9, -851938, 65536, 9, -786402, 65536, 9, -720866, 65536, 9, -655330, 65536, 9)
layer_1/name = "Mid"
layer_1/tile_data = PackedInt32Array(65535, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 131070, 0, 1, 131071, 0, 1, 65536, 65536, 0, 65537, 0, 1, 65538, 0, 1, 196606, 0, 1, 196607, 65536, 0, 131072, 65536, 0, 131073, 65536, 0, 131074, 65536, 0, 4, 262144, 0, 5, 262144, 0, 6, 262144, 0, 196616, 262144, 0, 196617, 262144, 0, 196618, 262144, 0, 393220, 262144, 0, 393221, 262144, 0, 393222, 262144, 0, 196619, 589824, 0, 196620, 655360, 0, 196621, 655360, 0, 196622, 655360, 0, 196623, 720896, 0, 196624, 262144, 0, 196625, 262144, 0, 196626, 262144, 0, 131089, 327680, 5, 65553, 327680, 4, 17, 327680, 3, -131064, 262144, 0, -131063, 262144, 0, -131062, 262144, 0, -131061, 589824, 0, -131060, 655360, 0, -131059, 720896, 0, -2, 196608, 8, -65538, 196608, 7, -196610, 131072, 4, -131058, 262144, 0, -131057, 262144, 0, -131056, 262144, 0, 327706, 131072, 1, 327707, 131072, 1, 327708, 131072, 1, 262170, 131072, 1, 262171, 131072, 1, 262172, 131072, 1, 196634, 131072, 0, 196635, 131072, 0, 196636, 131072, 0, 196637, 131072, 0, 196638, 131072, 0, 262173, 131072, 1, 262174, 131072, 1, 327709, 131072, 1, 327710, 131072, 1, 262152, 262144, 1, 262154, 262144, 1, 262153, 262144, 1, 327688, 262144, 1, 327689, 262144, 1, 327690, 262144, 1, 393224, 262144, 1, 393225, 262144, 1, 393226, 262144, 1, 458756, 262144, 1, 458757, 262144, 1, 458758, 262144, 1, 524292, 262144, 1, 524293, 262144, 1, 524294, 262144, 1, 589828, 262144, 1, 589829, 262144, 1, 589830, 262144, 1, 262160, 262144, 1, 262161, 262144, 1, 262162, 262144, 1, 327696, 262144, 1, 393232, 262144, 1, 393233, 262144, 1, 458769, 262144, 1, 458768, 262144, 1, 458770, 262144, 1, 393234, 262144, 1, 327698, 262144, 1, 327697, 262144, 1, 65540, 65536, 0, 65541, 65536, 0, 65542, 262144, 1, 65534, 0, 0, 458759, 262144, 1, 458760, 262144, 1, 458761, 262144, 1, 458762, 262144, 1, 524298, 262144, 1, 589834, 262144, 1, 589833, 262144, 1, 589832, 262144, 1, 589831, 262144, 1, 524295, 262144, 1, 524296, 262144, 1, 524297, 262144, 1, 393223, 262144, 0, 393219, 262144, 0, 393218, 262144, 0, 393217, 262144, 0, 458753, 262144, 1, 524289, 262144, 1, 589825, 262144, 1, 458754, 262144, 1, 524290, 262144, 1, 589826, 262144, 1, 458755, 262144, 1, 524291, 262144, 1, 589827, 262144, 1, 262142, 0, 1, 327678, 0, 1, 393214, 0, 1, 458750, 0, 1, 524286, 0, 1, 589822, 0, 1, 655358, 0, 1, 262143, 0, 1, 327679, 0, 1, 393215, 0, 1, 458751, 0, 1, 524287, 0, 1, 589823, 0, 1, 655359, 0, 1, 196608, 65536, 0, 262144, 65536, 0, 327680, 65536, 0, 393216, 0, 1, 458752, 0, 1, 524288, 0, 1, 589824, 0, 1, 65533, 0, 0, 65532, 0, 0, 65531, 0, 0, 65530, 0, 0, 65529, 0, 0, 65528, 0, 0, 65527, 0, 0, 65526, 0, 0, 65525, 0, 0, 65524, 0, 0, 65523, 0, 0, 65522, 0, 0, 65521, 0, 0)

[node name="Player" parent="." instance=ExtResource("1_pwhws")]

[node name="Camera2D" type="Camera2D" parent="Player"]
position = Vector2(0, -5)
zoom = Vector2(4, 4)
limit_bottom = 180
limit_smoothed = true
position_smoothing_enabled = true

[node name="Death Barrier" parent="." instance=ExtResource("6_svtmw")]
position = Vector2(-2, 183)

[node name="CollisionShape2D" type="CollisionShape2D" parent="Death Barrier"]
shape = SubResource("WorldBoundaryShape2D_026aa")

[node name="Slime" parent="." instance=ExtResource("7_c747q")]
position = Vector2(30, 100)

[node name="Coins" type="Node" parent="."]

[node name="Coin" parent="Coins" instance=ExtResource("5_dqucf")]
position = Vector2(63, 104)

[node name="Coin2" parent="Coins" instance=ExtResource("5_dqucf")]
position = Vector2(311, 56)

[node name="Coin3" parent="Coins" instance=ExtResource("5_dqucf")]
position = Vector2(344, 55)

[node name="Coin4" parent="Coins" instance=ExtResource("5_dqucf")]
position = Vector2(381, 56)

[node name="Coin5" parent="Coins" instance=ExtResource("5_dqucf")]
position = Vector2(240, -24)

[node name="bat" parent="." instance=ExtResource("11_8vwmf")]
position = Vector2(-112, -1)

[node name="Platforms" type="Node" parent="."]

[node name="platform" parent="Platforms" instance=ExtResource("3_v1tpm")]
position = Vector2(68, -29)

[node name="platform2" parent="Platforms" instance=ExtResource("3_v1tpm")]
position = Vector2(390, 69)

[node name="AnimationPlayer" type="AnimationPlayer" parent="Platforms/platform2"]
libraries = {
"": SubResource("AnimationLibrary_dm8ei")
}
autoplay = "RESET"

[node name="Labels" type="Node" parent="."]

[node name="Label" type="Label" parent="Labels"]
offset_left = -131.0
offset_top = 15.0
offset_right = 17.0
offset_bottom = 54.0
theme_override_fonts/font = ExtResource("8_vibu3")
theme_override_font_sizes/font_size = 8
text = "me when the"

[node name="Signs" type="Node" parent="."]

[node name="Sign" parent="Signs" instance=ExtResource("9_ededd")]
position = Vector2(78, 9)

[node name="bat2" parent="." instance=ExtResource("11_8vwmf")]
position = Vector2(41, 69)
